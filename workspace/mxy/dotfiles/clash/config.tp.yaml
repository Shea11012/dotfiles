allow-lan: true
mode: rule
mixed-port: 7890
tproxy-port: 7894
external-ui: ui
external-controller: 0.0.0.0:9090
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip" #从 GitHub Pages 分支获取
tcp-concurrent: true
find-process-mode: "off"
ipv6: false
log-level: info
global-client-fingerprint: chrome

geodata-mode: true
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geosite: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo/geosite-all.dat"
  geoip: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo/geoip-all.dat"
  mmdb: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo/Country-all.mmdb"
  asn: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo/Country-ASN-all.mmdb"

dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:53
  enhanced-mode: fake-ip
  use-hosts: true
  # use-system-hosts: true
  respect-rules: true
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - geosite:fakeip-filter
    - geosite:proxy
    # 默认的域名服务器,120腾讯，223阿里
  nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  proxy-server-nameserver:
    - https://8.8.8.8/dns-query
    - https://1.0.0.1/dns-query
    - https://1.12.12.12/dns-query
  # 用作解析dns的域名服务器,如果dns使用ip，则不需要配置
  # default-nameserver:
  #   - 119.29.29.29
  #   - 223.5.5.5
  # dns查询失败后的fallback，确保dns正确
  # 指定DNS代理策略
  nameserver-policy:
    "geosite:cn,private":
      - https://120.53.53.53/dns-query
      - https://223.5.5.5/dns-query
    "geosite:proxy":
      - https://1.0.0.1/dns-query
      - https://8.8.8.8/dns-query
  # fallback:
  #   - https://208.67.222.222/dns-query
  #   - https://8.8.8.8/dns-query
  #   - https://1.0.0.1/dns-query
  # fallback-filter:
  #   geoip: true
  #   ipcidr: [240.0.0.0/4, 0.0.0.0/32]

hosts:
  "*.local.com": 192.168.32.100

sniffer:
  enable: false
  force-dns-mapping: false
  parse-pure-ip: false
  override-destination: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: gvisor
  device: utun
  auto-route: true
  auto-detect-interface: true
  auto-redirect: true
  dns-hijack:
    - 0.0.0.0:53

ntp:
  enable: true
  write-to-system: true
  server: ntp.tencent.com
  port: 123
  interval: 30

profile:
  store-selected: true
  store-fake-ip: true

hc: &hc
  health-check:
    enable: true
    url: http://cp.cloudflare.com
    interval: 300

proxy-providers:
  # baiyueguang:
  #   type: http
  #   interval: 3600
  #   path: ./sub/白月光.yaml
  #   url: $baiyueguang
  #   <<: *hc
  #
  # sanyueqi:
  #   type: http
  #   interval: 3600
  #   path: ./sub/三月七.yaml
  #   url: $sanyueqi
  #   <<: *hc

  enet:
    type: http
    interval: 3600
    path: ./sub/enet.yaml
    url: $enet
    <<: *hc

pr: &pr
  type: select
  proxies: [DIRECT, 香港, 台湾, 日本, 新加坡, 其他地区]
proxy-groups:
  - name: default
    <<: *pr

  - name: PROXY
    <<: *pr

  - name: AI
    <<: *pr

  - name: Gmail
    <<: *pr

  - name: TikTok
    <<: *pr

  - name: Trackerslist
    <<: *pr

  - name: 香港
    type: select
    include-all-providers: true
    filter: "(?i)🇭🇰|港|hk|hongkong|hong kong"

  - name: 台湾
    type: select
    include-all-providers: true
    filter: "(?i)🇹🇼|台|tw|taiwan"

  - name: 新加坡
    type: select
    include-all-providers: true
    filter: "(?i)(🇸🇬|新|sg|singapore)"

  - name: 日本
    type: select
    include-all-providers: true
    filter: "(?i)🇯🇵|日本|jp|japan"

  - name: 韩国
    type: select
    include-all-providers: true
    filter: "(?i)🇰🇷|韩"

  - name: 美国
    type: select
    include-all-providers: true
    filter: "(?i)🇺🇸|美|us|unitedstates|united states"

  - name: 其他地区
    type: select
    include-all-providers: true
    filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|韩|美|us|unitedstates)).*"

rule-anchor:
  classical:
    &classical {
      type: http,
      interval: 86400,
      behavior: classical,
      format: yaml,
    }
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: yaml }
  domain:
    &domain { type: http, interval: 86400, behavior: domain, format: yaml }

rule-providers:
  custom-proxy:
    <<: *classical
    path: ./rules/custom-proxy.yaml
    url: http://192.168.32.100/assets/proxy.yaml
  custom-direct:
    <<: *classical
    path: ./rules/custom-direct.yaml
    url: http://192.168.32.100/assets/direct.yaml

rules:
  - GEOSITE,private,DIRECT
  - RULE-SET,custom-direct,DIRECT
  # 过滤广告
  - GEOSITE,ads,REJECT
  - GEOSITE,trackerslist,Trackerslist
  # direct
  - GEOSITE,games-cn,DIRECT
  - GEOSITE,microsoft-cn,DIRECT

  - GEOSITE,ai,AI
  - RULE-SET,custom-proxy,PROXY
  # - DOMAIN-KEYWORD,gmail,Gmail
  - GEOSITE,tld-proxy,PROXY
  - GEOSITE,proxy,PROXY
  - GEOSITE,cn,DIRECT

  - GEOIP,private,DIRECT,no-resolve
  - GEOIP,cn,DIRECT
  - GEOIP,cloudflare,PROXY,no-resolve
  - GEOIP,telegram,PROXY,no-resolve
  # FINAL
  - MATCH,default
